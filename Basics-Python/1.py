# Оператор Yield

# Первая функцияб генерирующая обратную последовательность чисел.
# Функция, которая обрабатывает большую последовательность и использует обычный return, требует от интерпретатора выделять
# ей много памяти. В проектах, содержащих последовательности с миллионами элементов, они потребляют очень много памяти.
def countdown(n):
    result = []
    while n != 0:
        result.append(n - 1)
        n -= 1
    return result


print(countdown(4))
print(countdown(4))


# Вторая функция генерирующая обратную последовательность чисел с оператором Yield.
# Использование yield в языке программирования Python 3 позволяет не сохранять в память всю последовательность,
# а просто генерирует объект при каждом вызове функции. Это позволяет обойтись без использования большого количества
# оперативной памяти.
def gen_countdown(n):
    while n != 0:
        yield n - 1
        n -= 1


g = gen_countdown(4)
print(next(g))
print(next(g))
print(next(g))
print(next(g))
